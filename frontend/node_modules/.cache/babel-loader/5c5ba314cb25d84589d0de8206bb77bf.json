{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusprudencio/Desktop/development/dev/fullstack/youmovie/frontend/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { FiPower, FiClock } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport * as S from './styles';\nimport logoImg from '../../assets/logo/youhealth.png';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n\nconst Dashboard = () => {\n  const {\n    signOut,\n    user\n  } = useAuth();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const handleDateChange = useCallback((day, modifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n  const handleMonthChange = useCallback(month => {\n    setCurrentMonth(month);\n  }, []);\n  useEffect(() => {\n    api.get(`/providers/${user.id}/month-availability`, {\n      params: {\n        year: currentMonth.getFullYear(),\n        month: currentMonth.getMonth() + 1\n      }\n    }).then(response => setMonthAvailability(response.data));\n  }, [currentMonth, user.id]);\n  useEffect(() => {\n    api.get('/appointments/me', {\n      params: {\n        year: selectedDate.getFullYear(),\n        month: selectedDate.getMonth() + 1,\n        day: selectedDate.getDate()\n      }\n    }).then(response => {\n      const appointmentsFormatted = response.data.map(appointment => ({ ...appointment,\n        hourFormatted: format(parseISO(appointment.date), 'HH:mm')\n      }));\n      setAppointments(appointmentsFormatted);\n    });\n  }, [selectedDate]);\n  const disableDays = useMemo(() => {\n    return monthAvailability.filter(monthDay => monthDay.available === false).map(monthDay => {\n      const year = currentMonth.getFullYear();\n      const month = currentMonth.getMonth();\n      return new Date(year, month, monthDay.day);\n    });\n  }, [currentMonth, monthAvailability]);\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n  const nextAppointment = useMemo(() => {\n    return appointments.find(appointment => isAfter(parseISO(appointment.date), new Date()));\n  }, [appointments]);\n  return /*#__PURE__*/React.createElement(S.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(S.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.HeaderContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Gamenoover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(S.HeaderProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar_url || 'https://api.adorable.io/avatars/56/abott@adorable.io.png',\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Bem-vindo,\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, user.name)))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiPower, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(S.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.Schedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Hor\\xE1rios agendados\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, isToday(selectedDate) && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 39\n    }\n  }, \"Hoje\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, selectedDateAsText), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, `${selectedWeekDay}-feira`)), isToday(selectedDate) && nextAppointment && /*#__PURE__*/React.createElement(S.NextAppointment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Atendimento a seguir\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: nextAppointment.user.avatar_url || 'https://api.adorable.io/avatars/80/abott@adorable.io.png',\n    alt: nextAppointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, nextAppointment.user.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }), nextAppointment.hourFormatted))), /*#__PURE__*/React.createElement(S.Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Manh\\xE3\"), morningAppointments.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Nenhum agendamento neste per\\xEDodo\"), morningAppointments.map(appointment => /*#__PURE__*/React.createElement(S.Appointment, {\n    key: appointment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }), appointment.hourFormatted), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: appointment.user.avatar_url || 'https://api.adorable.io/avatars/56/abott@adorable.io.png',\n    alt: appointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, appointment.user.name))))), /*#__PURE__*/React.createElement(S.Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"Tarde\"), afternoonAppointments.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, \"Nenhum agendamento neste per\\xEDodo\"), afternoonAppointments.map(appointment => /*#__PURE__*/React.createElement(S.Appointment, {\n    key: appointment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }), appointment.hourFormatted), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: appointment.user.avatar_url || 'https://api.adorable.io/avatars/56/abott@adorable.io.png',\n    alt: appointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }, appointment.user.name)))))), /*#__PURE__*/React.createElement(S.Calendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DayPicker, {\n    weekdaysShort: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\n    fromMonth: new Date(),\n    disabledDays: [{\n      daysOfWeek: [0, 6]\n    }, ...disableDays],\n    modifiers: {\n      available: {\n        daysOfWeek: [1, 2, 3, 4, 5]\n      }\n    },\n    onMonthChange: handleMonthChange,\n    selectedDays: selectedDate,\n    onDayClick: handleDateChange,\n    months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/viniciusprudencio/Desktop/development/dev/fullstack/youmovie/frontend/src/pages/Dashboard/index.tsx"],"names":["React","useState","useCallback","useEffect","useMemo","isToday","format","parseISO","isAfter","ptBR","DayPicker","FiPower","FiClock","Link","S","logoImg","useAuth","api","Dashboard","signOut","user","selectedDate","setSelectedDate","Date","currentMonth","setCurrentMonth","monthAvailability","setMonthAvailability","appointments","setAppointments","handleDateChange","day","modifiers","available","disabled","handleMonthChange","month","get","id","params","year","getFullYear","getMonth","then","response","data","getDate","appointmentsFormatted","map","appointment","hourFormatted","date","disableDays","filter","monthDay","selectedDateAsText","locale","selectedWeekDay","morningAppointments","getHours","afternoonAppointments","nextAppointment","find","avatar_url","name","length","daysOfWeek"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nimport { FiPower, FiClock } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport * as S from './styles';\n\nimport logoImg from '../../assets/logo/youhealth.png';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = useAuth();\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState<\n    MonthAvailabilityItem[]\n  >([]);\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then(response => setMonthAvailability(response.data));\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<Appointment[]>('/appointments/me', {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then(response => {\n        const appointmentsFormatted = response.data.map(appointment => ({\n          ...appointment,\n          hourFormatted: format(parseISO(appointment.date), 'HH:mm'),\n        }));\n\n        setAppointments(appointmentsFormatted);\n      });\n  }, [selectedDate]);\n\n  const disableDays = useMemo(() => {\n    return monthAvailability\n      .filter(monthDay => monthDay.available === false)\n      .map(monthDay => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n\n        return new Date(year, month, monthDay.day);\n      });\n  }, [currentMonth, monthAvailability]);\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", { locale: ptBR });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', { locale: ptBR });\n  }, [selectedDate]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const nextAppointment = useMemo(() => {\n    return appointments.find(appointment =>\n      isAfter(parseISO(appointment.date), new Date()),\n    );\n  }, [appointments]);\n\n  return (\n    <S.Container>\n      <S.Header>\n        <S.HeaderContent>\n          <img src={logoImg} alt=\"Gamenoover\" />\n\n          <S.HeaderProfile>\n            <img\n              src={\n                user.avatar_url ||\n                'https://api.adorable.io/avatars/56/abott@adorable.io.png'\n              }\n              alt={user.name}\n            />\n\n            <div>\n              <span>Bem-vindo,</span>\n              <Link to=\"/profile\">\n                <strong>{user.name}</strong>\n              </Link>\n            </div>\n          </S.HeaderProfile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower size={20} />\n          </button>\n        </S.HeaderContent>\n      </S.Header>\n\n      <S.Content>\n        <S.Schedule>\n          <h1>Horários agendados</h1>\n          <p>\n            {isToday(selectedDate) && <span>Hoje</span>}\n            <span>{selectedDateAsText}</span>\n            <span>{`${selectedWeekDay}-feira`}</span>\n          </p>\n\n          {isToday(selectedDate) && nextAppointment && (\n            <S.NextAppointment>\n              <strong>Atendimento a seguir</strong>\n              <div>\n                <img\n                  src={\n                    nextAppointment.user.avatar_url ||\n                    'https://api.adorable.io/avatars/80/abott@adorable.io.png'\n                  }\n                  alt={nextAppointment.user.name}\n                />\n\n                <strong>{nextAppointment.user.name}</strong>\n                <span>\n                  <FiClock size={24} />\n                  {nextAppointment.hourFormatted}\n                </span>\n              </div>\n            </S.NextAppointment>\n          )}\n\n          <S.Section>\n            <strong>Manhã</strong>\n\n            {morningAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {morningAppointments.map(appointment => (\n              <S.Appointment key={appointment.id}>\n                <span>\n                  <FiClock size={20} />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img\n                    src={\n                      appointment.user.avatar_url ||\n                      'https://api.adorable.io/avatars/56/abott@adorable.io.png'\n                    }\n                    alt={appointment.user.name}\n                  />\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </S.Appointment>\n            ))}\n          </S.Section>\n          <S.Section>\n            <strong>Tarde</strong>\n\n            {afternoonAppointments.length === 0 && (\n              <p>Nenhum agendamento neste período</p>\n            )}\n\n            {afternoonAppointments.map(appointment => (\n              <S.Appointment key={appointment.id}>\n                <span>\n                  <FiClock size={20} />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img\n                    src={\n                      appointment.user.avatar_url ||\n                      'https://api.adorable.io/avatars/56/abott@adorable.io.png'\n                    }\n                    alt={appointment.user.name}\n                  />\n\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </S.Appointment>\n            ))}\n          </S.Section>\n        </S.Schedule>\n        <S.Calendar>\n          <DayPicker\n            weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disableDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            onMonthChange={handleMonthChange}\n            selectedDays={selectedDate}\n            onDayClick={handleDateChange}\n            months={[\n              'Janeiro',\n              'Fevereiro',\n              'Março',\n              'Abril',\n              'Maio',\n              'Junho',\n              'Julho',\n              'Agosto',\n              'Setembro',\n              'Outubro',\n              'Novembro',\n              'Dezembro',\n            ]}\n          />\n        </S.Calendar>\n      </S.Content>\n    </S.Container>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}