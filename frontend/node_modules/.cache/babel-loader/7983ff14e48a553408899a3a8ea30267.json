{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusprudencio/Desktop/development/dev/fullstack/youmovie/frontend/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\nimport { Container, Error } from './styles';\n\nconst Input = ({\n  name,\n  containerStyle = {},\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isField, setIsField] = useState(false);\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n  const handleInputBlur = useCallback(() => {\n    var _inputRef$current;\n\n    setIsFocused(false);\n    setIsField(!!((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value));\n  }, []);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    style: containerStyle,\n    isErrored: !!error,\n    isField: isField,\n    isFocused: isFocused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    defaultValue: defaultValue,\n    ref: inputRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  })), error && /*#__PURE__*/React.createElement(Error, {\n    title: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    color: \"c53030\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/viniciusprudencio/Desktop/development/dev/fullstack/youmovie/frontend/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useState","useCallback","FiAlertCircle","useField","Container","Error","Input","name","containerStyle","icon","Icon","rest","inputRef","isFocused","setIsFocused","isField","setIsField","fieldName","defaultValue","error","registerField","handleInputFocus","handleInputBlur","current","value","ref","path"],"mappings":";AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,WAJF,QAMO,OANP;AAQA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;;AAQA,MAAMC,KAA2B,GAAG,CAAC;AACnCC,EAAAA,IADmC;AAEnCC,EAAAA,cAAc,GAAG,EAFkB;AAGnCC,EAAAA,IAAI,EAAEC,IAH6B;AAInC,KAAGC;AAJgC,CAAD,KAK9B;AACJ,QAAMC,QAAQ,GAAGb,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDjB,QAAQ,CAACI,IAAD,CAAlE;AAEA,QAAMc,gBAAgB,GAAGpB,WAAW,CAAC,MAAM;AACzCa,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,QAAMQ,eAAe,GAAGrB,WAAW,CAAC,MAAM;AAAA;;AACxCa,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAE,IAAAA,UAAU,CAAC,CAAC,uBAACJ,QAAQ,CAACW,OAAV,sDAAC,kBAAkBC,KAAnB,CAAF,CAAV;AACD,GAJkC,EAIhC,EAJgC,CAAnC;AAMA1B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,aAAa,CAAC;AACZb,MAAAA,IAAI,EAAEU,SADM;AAEZQ,MAAAA,GAAG,EAAEb,QAAQ,CAACW,OAFF;AAGZG,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACT,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,sBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEZ,cADT;AAEE,IAAA,SAAS,EAAE,CAAC,CAACW,KAFf;AAGE,IAAA,OAAO,EAAEJ,OAHX;AAIE,IAAA,SAAS,EAAEF,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANX,eAOE;AACE,IAAA,OAAO,EAAEW,gBADX;AAEE,IAAA,MAAM,EAAEC,eAFV;AAGE,IAAA,YAAY,EAAEJ,YAHhB;AAIE,IAAA,GAAG,EAAEN;AAJP,KAKMD,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,EAeGQ,KAAK,iBACJ,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,QAArB;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBJ,CADF;AAuBD,CApDD;;AAqDA,eAAeb,KAAf","sourcesContent":["import React, {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  InputHTMLAttributes,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: React.CSSProperties;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({\n  name,\n  containerStyle = {},\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isField, setIsField] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsField(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container\n      style={containerStyle}\n      isErrored={!!error}\n      isField={isField}\n      isFocused={isFocused}\n    >\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}