{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusprudencio/Desktop/development/dev/fullstack/youmovie/frontend/src/pages/ForgotPassword/index.tsx\";\nimport React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Container, Content, AnimationContainer } from './styles';\nimport logoImg from '../../assets/logo/youmovie.png';\nimport api from '../../services/api';\nimport BackgroundSlider from 'react-background-slider';\nimport bg1 from '../../assets/backgrounds/bg-youmovie1.jpg';\nimport bg2 from '../../assets/backgrounds/bg-youmovie2.jpg';\nimport bg3 from '../../assets/backgrounds/bg-youmovie3.jpg';\nimport bg4 from '../../assets/backgrounds/bg-youmovie4.jpg';\n\nconst ForgotPassword = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef(null); // const history = useHistory();\n\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      setLoading(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail é obrigatório').email('Digite um e-mail válido')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('/password/forgot', {\n        email: data.email\n      });\n      addToast({\n        type: 'success',\n        title: 'E-mail de recuperação enviado',\n        description: 'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada.'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na recuperação de senha',\n        description: 'Ocorreu um error ao tentar realizar a recuperação de senha'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [addToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundSlider, {\n    images: [bg1, bg2, bg3, bg4],\n    duration: 10,\n    transition: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"YouMovie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Recuperar senha\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Recuperar\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), \"Voltar ao login\"))));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/viniciusprudencio/Desktop/development/dev/fullstack/youmovie/frontend/src/pages/ForgotPassword/index.tsx"],"names":["React","useRef","useCallback","useState","FiLogIn","FiMail","Form","Yup","Link","useToast","getValidationErrors","Input","Button","Container","Content","AnimationContainer","logoImg","api","BackgroundSlider","bg1","bg2","bg3","bg4","ForgotPassword","loading","setLoading","formRef","addToast","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","post","type","title","description","err","ValidationError","errors"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Container, Content, AnimationContainer } from './styles';\n\nimport logoImg from '../../assets/logo/youmovie.png';\nimport api from '../../services/api';\n\nimport BackgroundSlider from 'react-background-slider'\n\nimport bg1 from '../../assets/backgrounds/bg-youmovie1.jpg'\nimport bg2 from '../../assets/backgrounds/bg-youmovie2.jpg'\nimport bg3 from '../../assets/backgrounds/bg-youmovie3.jpg'\nimport bg4 from '../../assets/backgrounds/bg-youmovie4.jpg'\n\ninterface ForgotPasswordFormData {\n  email: string;\n  password: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef<FormHandles>(null);\n  // const history = useHistory();\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n        setLoading(true);\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail é obrigatório')\n            .email('Digite um e-mail válido'),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'E-mail de recuperação enviado',\n          description:\n            'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada.',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha',\n          description:\n            'Ocorreu um error ao tentar realizar a recuperação de senha',\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <BackgroundSlider\n        images={[bg1, bg2, bg3, bg4]}\n        duration={10} transition={2} />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"YouMovie\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Recuperar senha</h1>\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n            <Button loading={loading} type=\"submit\">\n              Recuperar\n            </Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}